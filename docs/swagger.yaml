definitions:
  reqres.GoalRequest:
    properties:
      minute:
        type: integer
      player_id:
        type: integer
    type: object
  reqres.GoalResponse:
    properties:
      id:
        type: integer
      minute:
        type: integer
      player:
        $ref: '#/definitions/reqres.PlayerResponse'
    type: object
  reqres.MatchReportResponse:
    properties:
      away_team_total_wins:
        type: integer
      home_team_total_wins:
        type: integer
      match:
        $ref: '#/definitions/reqres.MatchResponse'
      match_result:
        type: string
      top_scorer:
        $ref: '#/definitions/reqres.PlayerResponse'
    type: object
  reqres.MatchRequest:
    properties:
      away_team_id:
        type: integer
      date:
        type: string
      home_team_id:
        type: integer
      time:
        type: string
    type: object
  reqres.MatchResponse:
    properties:
      away_score:
        type: integer
      away_team:
        $ref: '#/definitions/reqres.TeamResponse'
      date:
        type: string
      goals:
        items:
          $ref: '#/definitions/reqres.GoalResponse'
        type: array
      home_score:
        type: integer
      home_team:
        $ref: '#/definitions/reqres.TeamResponse'
      id:
        type: integer
      status:
        type: string
      time:
        type: string
    type: object
  reqres.MatchResultRequest:
    properties:
      away_score:
        type: integer
      goals:
        items:
          $ref: '#/definitions/reqres.GoalRequest'
        type: array
      home_score:
        type: integer
    type: object
  reqres.PlayerRequest:
    properties:
      height:
        type: number
      jersey_number:
        type: integer
      name:
        type: string
      position:
        type: string
      team_id:
        type: integer
      weight:
        type: number
    type: object
  reqres.PlayerResponse:
    properties:
      height:
        type: number
      id:
        type: integer
      jersey_number:
        type: integer
      name:
        type: string
      position:
        type: string
      team:
        $ref: '#/definitions/reqres.TeamResponse'
      weight:
        type: number
    type: object
  reqres.ResPaging:
    properties:
      data: {}
      limit:
        type: integer
      page:
        type: integer
      status:
        type: integer
      total_data:
        type: integer
      total_filtered:
        type: integer
      total_pages:
        type: integer
    type: object
  reqres.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  reqres.SignUpRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    required:
    - email
    - fullname
    - password
    type: object
  reqres.TeamRequest:
    properties:
      address:
        type: string
      city:
        type: string
      founded_year:
        type: integer
      logo:
        type: string
      name:
        type: string
    type: object
  reqres.TeamResponse:
    properties:
      address:
        type: string
      city:
        type: string
      founded_year:
        type: integer
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      players_count:
        type: integer
    type: object
info:
  contact: {}
  description: API documentation by Muhammad Fakhrur Rizal
  title: Ayo Indonesia API
paths:
  /v1/auth/signin:
    post:
      consumes:
      - application/json
      description: SignIn
      parameters:
      - description: SignIn user
        in: body
        name: signin
        required: true
        schema:
          $ref: '#/definitions/reqres.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: SignIn
      tags:
      - Auth
  /v1/auth/signup:
    post:
      consumes:
      - application/json
      description: SignUp
      parameters:
      - description: SignUp user
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/reqres.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: SignUp
      tags:
      - Auth
  /v1/auth/user:
    get:
      description: Get Sign In User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Get Sign In User
      tags:
      - Auth
  /v1/file:
    get:
      consumes:
      - application/json
      description: Mendapatkan List Files
      parameters:
      - description: search (string)
        in: query
        name: search
        type: string
      - description: page (int)
        in: query
        name: page
        type: integer
      - description: limit (int)
        in: query
        name: limit
        type: integer
      - description: token (string)
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Mendapatkan List Files
      tags:
      - File
    post:
      consumes:
      - multipart/form-data
      description: File Uploader
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Folder to store
        in: query
        name: folder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: File Uploader
      tags:
      - File
  /v1/matches:
    get:
      description: Get all matches with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search by team names
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.ResPaging'
      summary: Get All Matches
      tags:
      - Matches
    post:
      consumes:
      - application/json
      description: Create a new match schedule
      parameters:
      - description: Match data
        in: body
        name: match
        required: true
        schema:
          $ref: '#/definitions/reqres.MatchRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/reqres.MatchResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Create Match
      tags:
      - Matches
  /v1/matches/{id}:
    delete:
      description: Delete match by ID (soft delete)
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Delete Match
      tags:
      - Matches
    get:
      description: Get match details by ID
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.MatchResponse'
      summary: Get Match by ID
      tags:
      - Matches
  /v1/matches/{id}/report:
    get:
      description: Get detailed match report with statistics
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.MatchReportResponse'
      summary: Get Match Report
      tags:
      - Matches
  /v1/matches/{id}/result:
    put:
      consumes:
      - application/json
      description: Update match result with scores and goals
      parameters:
      - description: Match ID
        in: path
        name: id
        required: true
        type: integer
      - description: Match result data
        in: body
        name: result
        required: true
        schema:
          $ref: '#/definitions/reqres.MatchResultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.MatchResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Update Match Result
      tags:
      - Matches
  /v1/players:
    get:
      description: Get all players with pagination and optional team filter
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search by name or position
        in: query
        name: search
        type: string
      - description: Filter by team ID
        in: query
        name: team_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.ResPaging'
      summary: Get All Players
      tags:
      - Players
    post:
      consumes:
      - application/json
      description: Create a new player
      parameters:
      - description: Player data
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/reqres.PlayerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/reqres.PlayerResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Create Player
      tags:
      - Players
  /v1/players/{id}:
    delete:
      description: Delete player by ID (soft delete)
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Delete Player
      tags:
      - Players
    get:
      description: Get player details by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.PlayerResponse'
      summary: Get Player by ID
      tags:
      - Players
    put:
      consumes:
      - application/json
      description: Update player by ID
      parameters:
      - description: Player ID
        in: path
        name: id
        required: true
        type: integer
      - description: Player data
        in: body
        name: player
        required: true
        schema:
          $ref: '#/definitions/reqres.PlayerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.PlayerResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Update Player
      tags:
      - Players
  /v1/teams:
    get:
      description: Get all teams with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search by name or city
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.ResPaging'
      summary: Get All Teams
      tags:
      - Teams
    post:
      consumes:
      - application/json
      description: Create a new team
      parameters:
      - description: Team data
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/reqres.TeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.TeamResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Create Team
      tags:
      - Teams
  /v1/teams/{id}:
    delete:
      description: Delete team by ID (soft delete)
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Delete Team
      tags:
      - Teams
    get:
      description: Get team details by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.TeamResponse'
      summary: Get Team by ID
      tags:
      - Teams
    put:
      consumes:
      - application/json
      description: Update team by ID
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      - description: Team data
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/reqres.TeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/reqres.TeamResponse'
      security:
      - ApiKeyAuth: []
      - JwtToken: []
      summary: Update Team
      tags:
      - Teams
securityDefinitions:
  JwtToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
